{
    "env": {
        "browser": true,
        "es2022": true
    },
    "plugins": [
        "@typescript-eslint",
        "react",
        "react-refresh",
        "promise",
        "import",
        "simple-import-sort"
    ],
    "extends": [
        "eslint:recommended",
        "plugin:promise/recommended",
        "plugin:sonarjs/recommended",
        "plugin:optimize-regex/recommended",
        "plugin:react/recommended",
        "plugin:react/jsx-runtime",
        "plugin:react-hooks/recommended",
        "plugin:react-prefer-function-component/recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:prettier/recommended",
        "prettier"
    ],
    "rules": {
        "no-alert": "warn",
        "no-console": "warn",
        "no-debugger": "warn",
        "radix": "error",
        "no-new": "error",
        "eqeqeq": "error",
        "no-bitwise": "error",
        "no-new-func": "error",
        "no-sequences": "error",
        "no-lonely-if": "error",
        "no-new-object": "error",
        "no-lone-blocks": "error",
        "no-else-return": "error",
        "no-useless-call": "error",
        "no-new-wrappers": "error",
        "no-self-compare": "error",
        "arrow-body-style": "error",
        "no-useless-rename": "error",
        "no-useless-concat": "error",
        "no-useless-return": "error",
        "no-unneeded-ternary": "error",
        "no-implicit-coercion": "error",
        "no-useless-computed-key": "error",
        "no-template-curly-in-string": "error",
        "object-shorthand": ["error", "always"],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",
        "no-throw-literal": "off",
        "@typescript-eslint/no-throw-literal": "error",
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": [
            "error",
            {
                "allowShortCircuit": true,
                "allowTernary": true
            }
        ],
        "consistent-type-exports": "off",
        "@typescript-eslint/consistent-type-exports": "error",
        "consistent-type-imports": "off",
        "@typescript-eslint/consistent-type-imports": [
            "error",
            {
                "prefer": "type-imports",
                "fixStyle": "inline-type-imports",
                "disallowTypeAnnotations": false
            }
        ],
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/unbound-method": "warn",
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-misused-promises": "warn",
        "@typescript-eslint/no-unsafe-argument": "warn",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/prefer-function-type": "warn",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/prefer-nullish-coalescing": "off",
        "@typescript-eslint/no-useless-constructor": "error",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-redundant-type-constituents": "off",
        "@typescript-eslint/no-unnecessary-type-arguments": "warn",
        "@typescript-eslint/restrict-template-expressions": [
            "error",
            {
                "allowAny": true
            }
        ],
        "@typescript-eslint/no-import-type-side-effects": "error",
        "@typescript-eslint/consistent-type-definitions": ["error", "type"],
        "react/prop-types": "off",
        "react/no-danger": "error",
        "react/jsx-no-bind": "off",
        "react/no-multi-comp": "warn",
        "react/no-this-in-sfc": "error",
        "react/jsx-handler-names": "off",
        "react/jsx-no-useless-fragment": "error",
        "react/prefer-stateless-function": "error",
        "react-refresh/only-export-components": "warn",
        "react/jsx-filename-extension": [
            "error",
            {
                "extensions": [".jsx", ".tsx"]
            }
        ],
        "promise/always-return": "off",
        "promise/prefer-await-to-then": "off",
        "sonarjs/cognitive-complexity": "off",
        "sonarjs/no-duplicate-string": "off",
        "no-restricted-imports": "off",
        "@typescript-eslint/no-restricted-imports": [
            "error",
            {
                "paths": [
                    {
                        "name": "react",
                        "importNames": ["default"],
                        "message": "Please use syntax named import instead default."
                    }
                ]
            }
        ],
        "import/first": "error",
        "import/newline-after-import": "error",
        "import/no-duplicates": [
            "error",
            {
                "considerQueryString": true,
                "prefer-inline": true
            }
        ],
        "import/no-unresolved": "error",
        "simple-import-sort/imports": [
            "error",
            {
                "groups": [
                    // Packages `react` related packages come first.
                    ["^react", "^@?\\w"],
                    // Internal packages.
                    ["^(@|src)(/.*|$)"],
                    // Side effect imports.
                    ["^\\u0000"],
                    // Parent imports. Put `..` last.
                    ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
                    // Other relative imports. Put same-folder imports and `.` last.
                    ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
                    // Images imports.
                    ["^.+\\.?(svg|svg\\?url|png|jpe?g|bmp|gif)$"],
                    // Style imports.
                    ["^.+\\.css$"]
                ]
            }
        ]
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.app.json",
        "ecmaFeatures": {
            "jsx": true,
            "modules": true,
            "legacyDecorators": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "settings": {
        "react": {
            "version": "detect"
        },
        "import/parsers": {
            "@typescript-eslint/parser": [".ts", ".tsx"]
        },
        "import/resolver": {
            "typescript": {
                "alwaysTryTypes": true
            }
        }
    },
    "root": true
}
